{"version":3,"sources":["components/NavBar.tsx","components/PageNotFound.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["NavBar","className","role","isActive","cn","to","PageNotFound","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","name","PeopleTable","people","selectedSlug","map","mother","find","p","motherName","father","fatherName","born","died","PeoplePage","useState","setPeople","isLoading","setLoading","isLoaded","setLoaded","hasError","setHasError","match","useMatch","params","loadUsers","peopleFromServer","useEffect","showErrorBlock","length","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.e9784b3b.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const NavBar: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => (\n              cn(\n                'navbar-item',\n                { 'has-background-grey-lighter': isActive },\n              )\n            )}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => (\n              cn(\n                'navbar-item',\n                { 'has-background-grey-lighter': isActive },\n              )\n            )}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import React from 'react';\n\nexport const PageNotFound:React.FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person | null\n};\n\nexport const PersonLink:React.FC<Props> = ({ person }) => {\n  if (!person) {\n    return <span>-</span>;\n  }\n\n  return (\n    <Link\n      to={`/people/:${person.slug}`}\n      className={cn({\n        'has-text-danger': person.sex === 'f',\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import cn from 'classnames';\nimport React from 'react';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[]\n  selectedSlug: string\n};\n\nexport const PeopleTable:React.FC<Props> = ({\n  people,\n  selectedSlug,\n}) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const mother = people.find(p => p.name === person.motherName) || null;\n          const father = people.find(p => p.name === person.fatherName) || null;\n\n          return (\n            <tr\n              className={cn({\n                'has-background-warning': selectedSlug === person.slug,\n              })}\n              key={person.slug}\n              data-cy=\"person\"\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td><PersonLink person={mother} /></td>\n              <td><PersonLink person={father} /></td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useMatch } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Person } from '../types/Person';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage:React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setLoading] = useState(false);\n  const [isLoaded, setLoaded] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const match = useMatch('/people/:slug');\n  const selectedSlug = match?.params.slug || '';\n\n  const loadUsers = async () => {\n    setLoading(true);\n    try {\n      const peopleFromServer = await getPeople();\n\n      setPeople(peopleFromServer);\n      setLoaded(true);\n    } catch (err) {\n      setHasError(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  const showErrorBlock = isLoading || hasError || !people.length;\n\n  return (\n    <>\n      {showErrorBlock ? (\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            {isLoading && <Loader />}\n\n            {hasError && (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                Something went wrong\n              </p>\n            )}\n\n            {!people.length && isLoaded && (\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            )}\n          </div>\n        </div>\n      ) : (\n        <PeopleTable\n          people={people}\n          selectedSlug={selectedSlug}\n        />\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport {\n  Navigate, Route, Routes,\n} from 'react-router-dom';\nimport './App.scss';\nimport { NavBar } from './components/NavBar';\nimport { PageNotFound } from './components/PageNotFound';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App:React.FC = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={(\n              <h1 className=\"title\">Home Page</h1>\n            )}\n          />\n          <Route\n            path=\"/home\"\n            element={\n              <Navigate to=\"/\" replace />\n            }\n          />\n          <Route\n            path=\"/people\"\n            element={(\n              <>\n                <h1 className=\"title\">People Page</h1>\n                <PeoplePage />\n              </>\n            )}\n          />\n          <Route\n            path=\"*\"\n            element={\n              <PageNotFound />\n            }\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}