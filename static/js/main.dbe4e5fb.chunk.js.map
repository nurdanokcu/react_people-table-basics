{"version":3,"sources":["components/Navigation/Navigation.tsx","Pages/HomePage.tsx","Pages/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","Pages/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Navigation","className","role","isActive","cn","to","HomePage","NotFoundPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","name","PeopleTable","people","personSlug","getParent","parentName","find","map","born","died","motherName","fatherName","mother","father","PeoplePage","useState","isLoading","setLoading","didload","setLoaded","setPeople","hasError","setError","useParams","useEffect","loadPeople","peopleFromServer","showTable","length","App","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"qQAGaA,EAAsB,WACjC,OACE,qBACE,UAAQ,MACRC,UAAU,iCACVC,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKD,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEA,UAAW,gBAAGE,EAAH,EAAGA,SAAH,OACTC,IAAG,cACD,CAAE,8BAA+BD,GAF1B,EAIXE,GAAG,IALL,kBAUA,cAAC,IAAD,CACEJ,UAAW,gBAAGE,EAAH,EAAGA,SAAH,OACTC,IAAG,cACD,CAAE,8BAA+BD,GAF1B,EAIXE,GAAG,UALL,0BAaT,ECpCYC,EAAoB,WAC/B,OACE,oBAAIL,UAAU,QAAd,sBAEH,ECJYM,EAAwB,WACnC,OACE,oBAAIN,UAAU,QAAd,2BAEH,E,6BCKM,SAASO,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,C,UCZYQ,EAAS,kBACpB,qBAAKhB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,ECKTiB,EAA6B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3C,OACE,cAAC,IAAD,CACEd,GAAE,kBAAac,EAAOC,MACtBnB,UAAWG,IACT,CAAE,kBAAkC,MAAfe,EAAOE,MAHhC,SAMGF,EAAOG,MAGb,ECTYC,EAA8B,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WAC9CC,EAAY,SAACC,GACjB,OAAOH,EAAOI,MAAK,qBAAGN,OAAoBK,CAAvB,KAAsC,IAC1D,EAED,OACE,wBACE,UAAQ,cACR1B,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGuB,EAAOK,KAAI,SAAAV,GACV,IACEC,EACED,EADFC,KAAMC,EACJF,EADIE,IAAKS,EACTX,EADSW,KAAMC,EACfZ,EADeY,KAAMC,EACrBb,EADqBa,WAAYC,EACjCd,EADiCc,WAG/BC,EAASR,EAAUM,GACnBG,EAAST,EAAUO,GAEzB,OACE,qBAEE,UAAQ,SACRhC,UAAWG,IACT,CAAE,yBAA0BgB,IAASK,IAJzC,UAOE,6BAAI,cAAC,EAAD,CAAYN,OAAQA,MACxB,6BAAKE,IACL,6BAAKS,IACL,6BAAKC,IACL,gCACIC,GAAe,IAChBA,GAAcE,EACV,cAAC,EAAD,CAAYf,OAAQe,IACpBF,KAEP,gCACIC,GAAe,IAChBA,GAAcE,EACV,cAAC,EAAD,CAAYhB,OAAQgB,IACpBF,OApBFb,EAwBV,QAIR,EC9DYgB,EAAsB,WACjC,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA6BF,oBAAS,GAAtC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA4BJ,mBAAmB,IAA/C,mBAAOb,EAAP,KAAekB,EAAf,KACA,EAA6BL,oBAAS,GAAtC,mBAAOM,EAAP,KAAiBC,EAAjB,KACQnB,EAAeoB,cAAfpB,WAERqB,qBAAU,WACR,IAAMC,EAAU,iDAAG,qGACjBR,GAAW,GADM,kBAGgB/B,IAHhB,OAGTwC,EAHS,OAKfN,EAAUM,GACVP,GAAU,GANK,gDAQfG,GAAS,GARM,yBAUfL,GAAW,GAVI,4EAAH,qDAchBQ,GACD,GAAE,IAEH,IAAME,GAAaX,GACdE,IACCG,GACDnB,EAAO0B,OAAS,EAErB,OACE,qCACE,oBAAIjD,UAAU,QAAd,yBACA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACGqC,GAAa,cAAC,EAAD,IAEbK,GACC,mBAAG,UAAQ,qBAAqB1C,UAAU,kBAA1C,kCAKDuC,IAAYhB,EAAO0B,QAClB,mBAAG,UAAQ,kBAAX,+CAKDD,GACC,cAAC,EAAD,CACEzB,OAAQA,EACRC,WAAYA,WAQzB,EC5DY0B,EAAM,kBACjB,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IAEA,sBAAMlD,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SAEE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmD,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,eAAC,IAAD,CAAOD,KAAK,UAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,cAAcC,QAAS,cAAC,EAAD,SAErC,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUhD,GAAG,IAAIkD,SAAO,MACrD,cAAC,IAAD,CAAOH,KAAK,IAAIC,QAAS,cAAC,EAAD,eAdhB,ECCnBG,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.dbe4e5fb.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navigation:React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => (\n              cn('navbar-item',\n                { 'has-background-grey-lighter': isActive })\n            )}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => (\n              cn('navbar-item',\n                { 'has-background-grey-lighter': isActive })\n            )}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage:React.FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","export const NotFoundPage:React.FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person\n};\nexport const PersonLink:React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={cn(\n        { 'has-text-danger': person.sex === 'f' },\n      )}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[];\n  personSlug?: string;\n};\n\nexport const PeopleTable:React.FC<Props> = ({ people, personSlug }) => {\n  const getParent = (parentName: string | null) => {\n    return people.find(({ name }) => name === parentName) || null;\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            slug, sex, born, died, motherName, fatherName,\n          } = person;\n\n          const mother = getParent(motherName);\n          const father = getParent(fatherName);\n\n          return (\n            <tr\n              key={slug}\n              data-cy=\"person\"\n              className={cn(\n                { 'has-background-warning': slug === personSlug },\n              )}\n            >\n              <td><PersonLink person={person} /></td>\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>\n                {!motherName && ('-')}\n                {motherName && mother\n                  ? (<PersonLink person={mother} />)\n                  : (motherName)}\n              </td>\n              <td>\n                {!fatherName && ('-')}\n                {fatherName && father\n                  ? (<PersonLink person={father} />)\n                  : (fatherName)}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\n\nexport const PeoplePage:React.FC = () => {\n  const [isLoading, setLoading] = useState(false);\n  const [didload, setLoaded] = useState(false);\n  const [people, setPeople] = useState<Person[]>([]);\n  const [hasError, setError] = useState(false);\n  const { personSlug } = useParams();\n\n  useEffect(() => {\n    const loadPeople = async () => {\n      setLoading(true);\n      try {\n        const peopleFromServer = await getPeople();\n\n        setPeople(peopleFromServer);\n        setLoaded(true);\n      } catch {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadPeople();\n  }, []);\n\n  const showTable = !isLoading\n    && didload\n    && !hasError\n    && people.length > 0;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {hasError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {didload && !people.length && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {showTable && (\n            <PeopleTable\n              people={people}\n              personSlug={personSlug}\n            />\n          )}\n        </div>\n      </div>\n    </>\n\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { Navigation } from './components/Navigation';\nimport { HomePage } from './Pages/HomePage';\nimport { NotFoundPage } from './Pages/NotFoundPage';\nimport { PeoplePage } from './Pages/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personSlug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}